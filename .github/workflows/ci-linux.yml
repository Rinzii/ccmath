name: ci-linux
on:
  push:
    tags-ignore:
      - v*.*
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        compiler: [ninja-gcc, ninja-clang, ninja-clang-libcpp]
        cxx_version: [17, 20]
        target: [Debug, Release]
    steps:
      - uses: actions/checkout@v4

      - name: Cache CMake build files
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ runner.os }}-cmake-${{ matrix.compiler }}-${{ matrix.cxx_version }}-${{ matrix.target }}
          restore-keys: |
            ${{ runner.os }}-cmake-${{ matrix.compiler }}-${{ matrix.cxx_version }}-
            ${{ runner.os }}-cmake-${{ matrix.compiler }}-

      - name: install dependencies
        run: sudo apt install -yqq ninja-build

      - name: configure cmake
        run: cmake -S . --preset=${{matrix.compiler}} -B build -DCMAKE_CXX_STANDARD=${{matrix.cxx_version}}

      - name: build
        run: cmake --build build --config=${{matrix.target}}

  test:
    runs-on: ubuntu-22.04
    needs: build
    strategy:
      fail-fast: false
      matrix:
        compiler: [ninja-gcc, ninja-clang, ninja-clang-libcpp]
        cxx_version: [17, 20]
        target: [Debug, Release]
    steps:
      - uses: actions/checkout@v4

      - name: Cache CMake build files
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ runner.os }}-cmake-${{ matrix.compiler }}-${{ matrix.cxx_version }}-${{ matrix.target }}

      - name: test
        run: cd build && ctest -C ${{matrix.target}} --output-on-failure
